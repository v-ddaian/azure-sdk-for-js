/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreAuth from "@azure/core-auth";
import {
  AliasImpl,
  DataImpl,
  DatasetImpl,
  ConversionImpl,
  FeatureStateImpl,
  SpatialImpl,
  TilesetImpl,
  WfsImpl
} from "./operations";
import {
  Alias,
  Data,
  Dataset,
  Conversion,
  FeatureState,
  Spatial,
  Tileset,
  Wfs
} from "./operationsInterfaces";
import { CreatorClientContext } from "./creatorClientContext";
import { CreatorClientOptionalParams } from "./models";

export class CreatorClient extends CreatorClientContext {
  /**
   * Initializes a new instance of the CreatorClient class.
   * @param credentials Subscription credentials which uniquely identify client subscription.
   * @param options The parameter options
   */
  constructor(
    credentials: coreAuth.TokenCredential,
    options?: CreatorClientOptionalParams
  ) {
    super(credentials, options);
    this.alias = new AliasImpl(this);
    this.data = new DataImpl(this);
    this.dataset = new DatasetImpl(this);
    this.conversion = new ConversionImpl(this);
    this.featureState = new FeatureStateImpl(this);
    this.spatial = new SpatialImpl(this);
    this.tileset = new TilesetImpl(this);
    this.wfs = new WfsImpl(this);
  }

  alias: Alias;
  data: Data;
  dataset: Dataset;
  conversion: Conversion;
  featureState: FeatureState;
  spatial: Spatial;
  tileset: Tileset;
  wfs: Wfs;
}
