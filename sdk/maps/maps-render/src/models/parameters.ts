/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import {
  OperationParameter,
  OperationURLParameter,
  OperationQueryParameter
} from "@azure/core-client";

export const accept: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue:
      "application/json, image/jpeg, image/png, image/pbf, application/vnd.mapbox-vector-tile",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String"
    }
  }
};

export const geography: OperationURLParameter = {
  parameterPath: "geography",
  mapper: {
    serializedName: "geography",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const xMsClientId: OperationParameter = {
  parameterPath: "xMsClientId",
  mapper: {
    serializedName: "x-ms-client-id",
    type: {
      name: "String"
    }
  }
};

export const apiVersion: OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "1.0",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};

export const format: OperationURLParameter = {
  parameterPath: "format",
  mapper: {
    serializedName: "format",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const layer: OperationQueryParameter = {
  parameterPath: ["options", "layer"],
  mapper: {
    serializedName: "layer",
    type: {
      name: "String"
    }
  }
};

export const style: OperationQueryParameter = {
  parameterPath: ["options", "style"],
  mapper: {
    serializedName: "style",
    type: {
      name: "String"
    }
  }
};

export const zoom: OperationQueryParameter = {
  parameterPath: ["options", "zoom"],
  mapper: {
    constraints: {
      InclusiveMaximum: 20,
      InclusiveMinimum: 0
    },
    serializedName: "zoom",
    type: {
      name: "Number"
    }
  }
};

export const center: OperationQueryParameter = {
  parameterPath: ["options", "center"],
  mapper: {
    serializedName: "center",
    type: {
      name: "String"
    }
  }
};

export const bbox: OperationQueryParameter = {
  parameterPath: ["options", "bbox"],
  mapper: {
    serializedName: "bbox",
    type: {
      name: "String"
    }
  }
};

export const height: OperationQueryParameter = {
  parameterPath: ["options", "height"],
  mapper: {
    constraints: {
      InclusiveMaximum: 8192,
      InclusiveMinimum: 1
    },
    serializedName: "height",
    type: {
      name: "Number"
    }
  }
};

export const width: OperationQueryParameter = {
  parameterPath: ["options", "width"],
  mapper: {
    constraints: {
      InclusiveMaximum: 8192,
      InclusiveMinimum: 1
    },
    serializedName: "width",
    type: {
      name: "Number"
    }
  }
};

export const language: OperationQueryParameter = {
  parameterPath: ["options", "language"],
  mapper: {
    serializedName: "language",
    type: {
      name: "String"
    }
  }
};

export const view: OperationQueryParameter = {
  parameterPath: ["options", "view"],
  mapper: {
    serializedName: "view",
    type: {
      name: "String"
    }
  }
};

export const pins: OperationQueryParameter = {
  parameterPath: ["options", "pins"],
  mapper: {
    serializedName: "pins",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "String"
        }
      }
    }
  },
  collectionFormat: "Multi"
};

export const path: OperationQueryParameter = {
  parameterPath: ["options", "path"],
  mapper: {
    serializedName: "path",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "String"
        }
      }
    }
  },
  collectionFormat: "Multi"
};

export const format1: OperationURLParameter = {
  parameterPath: "format",
  mapper: {
    serializedName: "format",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const layer1: OperationQueryParameter = {
  parameterPath: "layer",
  mapper: {
    serializedName: "layer",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const style1: OperationQueryParameter = {
  parameterPath: "style",
  mapper: {
    serializedName: "style",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const zoom1: OperationQueryParameter = {
  parameterPath: "zoom",
  mapper: {
    serializedName: "zoom",
    required: true,
    type: {
      name: "Number"
    }
  }
};

export const xTileIndex: OperationQueryParameter = {
  parameterPath: "xTileIndex",
  mapper: {
    serializedName: "x",
    required: true,
    type: {
      name: "Number"
    }
  }
};

export const yTileIndex: OperationQueryParameter = {
  parameterPath: "yTileIndex",
  mapper: {
    serializedName: "y",
    required: true,
    type: {
      name: "Number"
    }
  }
};

export const tileSize: OperationQueryParameter = {
  parameterPath: ["options", "tileSize"],
  mapper: {
    serializedName: "tileSize",
    type: {
      name: "String"
    }
  }
};

export const accept1: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/vnd.mapbox-vector-tile, application/json",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String"
    }
  }
};

export const statesetId: OperationQueryParameter = {
  parameterPath: "statesetId",
  mapper: {
    serializedName: "statesetId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const accept2: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String"
    }
  }
};

export const format2: OperationURLParameter = {
  parameterPath: "format",
  mapper: {
    serializedName: "format",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const accept3: OperationParameter = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/json, image/jpeg, image/png",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String"
    }
  }
};

export const style2: OperationQueryParameter = {
  parameterPath: "style",
  mapper: {
    serializedName: "style",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const mincoordinates: OperationQueryParameter = {
  parameterPath: "mincoordinates",
  mapper: {
    serializedName: "mincoordinates",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const maxcoordinates: OperationQueryParameter = {
  parameterPath: "maxcoordinates",
  mapper: {
    serializedName: "maxcoordinates",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const text: OperationQueryParameter = {
  parameterPath: ["options", "text"],
  mapper: {
    serializedName: "text",
    type: {
      name: "String"
    }
  }
};

export const apiVersion1: OperationQueryParameter = {
  parameterPath: "apiVersion",
  mapper: {
    defaultValue: "2.0",
    isConstant: true,
    serializedName: "api-version",
    type: {
      name: "String"
    }
  }
};

export const tilesetId: OperationQueryParameter = {
  parameterPath: "tilesetId",
  mapper: {
    serializedName: "tilesetId",
    required: true,
    type: {
      name: "String"
    }
  }
};

export const timeStamp: OperationQueryParameter = {
  parameterPath: ["options", "timeStamp"],
  mapper: {
    serializedName: "timeStamp",
    type: {
      name: "String"
    }
  }
};

export const tileSize1: OperationQueryParameter = {
  parameterPath: ["options", "tileSize"],
  mapper: {
    serializedName: "tileSize",
    type: {
      name: "String"
    }
  }
};
